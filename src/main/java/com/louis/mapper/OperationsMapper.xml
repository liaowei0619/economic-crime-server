<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.louis.mapper.OperationsMapper">
    <resultMap id="BaseResultMap" type="com.louis.entity.Operations">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="args" property="args" jdbcType="VARCHAR"/>
        <result column="classMethod" property="classmethod" jdbcType="VARCHAR"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="method" property="method" jdbcType="VARCHAR"/>
        <result column="reqDateTime" property="reqdatetime" jdbcType="TIMESTAMP"/>
        <result column="reqResult" property="reqresult" jdbcType="TINYINT"/>
        <result column="saveDateTime" property="savedatetime" jdbcType="TIMESTAMP"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, args, classMethod, ip, method, reqDateTime, reqResult, saveDateTime, url
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.louis.entity.OperationsExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from operations
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from operations
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from operations
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.louis.entity.OperationsExample">
        delete from operations
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.louis.entity.Operations">
    insert into operations (id, args, classMethod, 
      ip, method, reqDateTime, 
      reqResult, saveDateTime, url
      )
    values (#{id,jdbcType=VARCHAR}, #{args,jdbcType=VARCHAR}, #{classmethod,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{reqdatetime,jdbcType=TIMESTAMP}, 
      #{reqresult,jdbcType=TINYINT}, #{savedatetime,jdbcType=TIMESTAMP}, #{url,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.louis.entity.Operations">
        insert into operations
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="args != null">
                args,
            </if>
            <if test="classmethod != null">
                classMethod,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="method != null">
                method,
            </if>
            <if test="reqdatetime != null">
                reqDateTime,
            </if>
            <if test="reqresult != null">
                reqResult,
            </if>
            <if test="savedatetime != null">
                saveDateTime,
            </if>
            <if test="url != null">
                url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="args != null">
                #{args,jdbcType=VARCHAR},
            </if>
            <if test="classmethod != null">
                #{classmethod,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="reqdatetime != null">
                #{reqdatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="reqresult != null">
                #{reqresult,jdbcType=TINYINT},
            </if>
            <if test="savedatetime != null">
                #{savedatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.louis.entity.OperationsExample" resultType="java.lang.Integer">
        select count(*) from operations
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update operations
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.args != null">
                args = #{record.args,jdbcType=VARCHAR},
            </if>
            <if test="record.classmethod != null">
                classMethod = #{record.classmethod,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                ip = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.method != null">
                method = #{record.method,jdbcType=VARCHAR},
            </if>
            <if test="record.reqdatetime != null">
                reqDateTime = #{record.reqdatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reqresult != null">
                reqResult = #{record.reqresult,jdbcType=TINYINT},
            </if>
            <if test="record.savedatetime != null">
                saveDateTime = #{record.savedatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update operations
        set id = #{record.id,jdbcType=VARCHAR},
        args = #{record.args,jdbcType=VARCHAR},
        classMethod = #{record.classmethod,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        method = #{record.method,jdbcType=VARCHAR},
        reqDateTime = #{record.reqdatetime,jdbcType=TIMESTAMP},
        reqResult = #{record.reqresult,jdbcType=TINYINT},
        saveDateTime = #{record.savedatetime,jdbcType=TIMESTAMP},
        url = #{record.url,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.louis.entity.Operations">
        update operations
        <set>
            <if test="args != null">
                args = #{args,jdbcType=VARCHAR},
            </if>
            <if test="classmethod != null">
                classMethod = #{classmethod,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                method = #{method,jdbcType=VARCHAR},
            </if>
            <if test="reqdatetime != null">
                reqDateTime = #{reqdatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="reqresult != null">
                reqResult = #{reqresult,jdbcType=TINYINT},
            </if>
            <if test="savedatetime != null">
                saveDateTime = #{savedatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.louis.entity.Operations">
    update operations
    set args = #{args,jdbcType=VARCHAR},
      classMethod = #{classmethod,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      reqDateTime = #{reqdatetime,jdbcType=TIMESTAMP},
      reqResult = #{reqresult,jdbcType=TINYINT},
      saveDateTime = #{savedatetime,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>